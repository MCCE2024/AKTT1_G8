name: Build Docker Images

on:
  push:
    branches:
      - develop
  pull_request:

jobs:
  build-docker-images:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch full history to include all tags

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Find directories with Dockerfiles
        id: find-dirs
        run: |
          find . -type f -name Dockerfile -exec dirname {} \; > directories.txt

      - name: Determine Image Version
        id: get-version
        run: |
          git fetch --tags # Ensure all tags are fetched
          version=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || git rev-parse --short HEAD)
          echo "::set-output name=version::$version"

      - name: Build and Tag Docker Images
        env:
          DOCKER_BUILDKIT: 1
        run: |
          while IFS= read -r dir; do
            image_name=$(basename "$dir")
            version=${{ steps.get-version.outputs.version }}
            echo "Building Docker image for directory: $dir"
            docker build "$dir" -t "lzainzinger02/$image_name:latest" \
                                 -t "lzainzinger02/$image_name:$version"
          done < directories.txt

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Images
        run: |
          while IFS= read -r dir; do
            image_name=$(basename "$dir")
            version=${{ steps.get-version.outputs.version }}
            echo "Pushing Docker image: lzainzinger02/$image_name:latest"
            echo "Pushing Docker image: lzainzinger02/$image_name:$version"
            docker push "lzainzinger02/$image_name:latest"
            docker push "lzainzinger02/$image_name:$version"
          done < directories.txt
